sum(str_detect(dir("~/"), "singletrack.Rdata"))==0
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
log <- load("~singletrack.Rdata")
}
log <- load("~/singletrack.Rdata")
log
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
log <- load("~/singletrack.Rdata")
}
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
log <- load("~/singletrack.Rdata")
}
log
log <- ""
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
post_titles
index <- str_detect(tolower(post_titles), "rockshox")
index
tolower(post_titles[i])
log <- c(log, tolower(post_titles[i]))
log
save(log, file="~/singletrack.Rdata")
load("~/singletrack.Rdata")
log
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
load("~/singletrack.Rdata")
}
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
index <- str_detect(tolower(post_titles), "rockshox")
if(sum(index)>0){
posts <- (1:length(index))[index==1]
for(i in posts){
if(!str_detect(tolower(log), tolower(post_titles[i]))){
log <- c(log, tolower(post_titles[i]))
pbPost("link", post_titles[i], url="http://singletrackworld.com/forum/forum/classifieds")
}
}
save(log, file="~/singletrack.Rdata")
}
load("~/singletrack.Rdata")
log
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
load("~/singletrack.Rdata")
}
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
index <- str_detect(tolower(post_titles), "rockshox")
if(sum(index)>0){
posts <- (1:length(index))[index==1]
for(i in posts){
if(!str_detect(tolower(log), tolower(post_titles[i]))){
log <- c(log, tolower(post_titles[i]))
pbPost("link", post_titles[i], url="http://singletrackworld.com/forum/forum/classifieds")
}
}
save(log, file="~/singletrack.Rdata")
}
str_detect(tolower(log), tolower(post_titles[i]))
log
log <- ""
sum(str_detect(tolower(log), tolower(post_titles[i])))>0
save(log, file="~/singletrack.Rdata")
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
load("~/singletrack.Rdata")
}
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
index <- str_detect(tolower(post_titles), "rockshox")
if(sum(index)>0){
posts <- (1:length(index))[index==1]
for(i in posts){
if(sum(str_detect(tolower(log), tolower(post_titles[i])))>0){
log <- c(log, tolower(post_titles[i]))
pbPost("link", post_titles[i], url="http://singletrackworld.com/forum/forum/classifieds")
}
}
save(log, file="~/singletrack.Rdata")
}
unlink(~/singletrack.Rdata)
unlink("~/singletrack.Rdata")
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
load("~/singletrack.Rdata")
}
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
index <- str_detect(tolower(post_titles), "rockshox")
if(sum(index)>0){
posts <- (1:length(index))[index==1]
for(i in posts){
if(sum(str_detect(tolower(log), tolower(post_titles[i])))>0){
log <- c(log, tolower(post_titles[i]))
pbPost("link", post_titles[i], url="http://singletrackworld.com/forum/forum/classifieds")
}
}
save(log, file="~/singletrack.Rdata")
}
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
load("~/singletrack.Rdata")
}
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
log
index <- str_detect(tolower(post_titles), "rockshox")
sum(index)
posts <- (1:length(index))[index==1]
posts
i=8
sum(str_detect(tolower(log), tolower(post_titles[i])))
tolower(log)
tolower(post_titles[i]))
tolower(post_titles[i])
str_detect(tolower(log), tolower(post_titles[i])))
str_detect(tolower(log), tolower(post_titles[i])
)
any(str_detect(tolower(log), tolower(post_titles[i]))
)
if(any(str_detect(tolower(log), tolower(post_titles[i])))
'l'
if(any(str_detect(tolower(log), tolower(post_titles[i])))0'l'
if(any(str_detect(tolower(log), tolower(post_titles[i])))'l'
if(any(str_detect(tolower(log), tolower(post_titles[i])))print('l')
if(any(str_detect(tolower(log), tolower(post_titles[i])))print('l')
if(any(str_detect(tolower(log), tolower(post_titles[i]))) print('l')
if(any(str_detect(tolower(log), tolower(post_titles[i])))) print('l')
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
load("~/singletrack.Rdata")
}
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
index <- str_detect(tolower(post_titles), "rockshox")
if(sum(index)>0){
posts <- (1:length(index))[index==1]
for(i in posts){
if(any(str_detect(tolower(log), tolower(post_titles[i])))){
log <- c(log, tolower(post_titles[i]))
pbPost("link", post_titles[i], url="http://singletrackworld.com/forum/forum/classifieds")
}
}
save(log, file="~/singletrack.Rdata")
}
log
any(str_detect(tolower(log), tolower(post_titles[i])))
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
load("~/singletrack.Rdata")
}
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
index <- str_detect(tolower(post_titles), "rockshox")
if(sum(index)>0){
posts <- (1:length(index))[index==1]
for(i in posts){
if(!any(str_detect(tolower(log), tolower(post_titles[i])))){
log <- c(log, tolower(post_titles[i]))
pbPost("link", post_titles[i], url="http://singletrackworld.com/forum/forum/classifieds")
}
}
save(log, file="~/singletrack.Rdata")
}
library(XML)
library(RPushbullet)
library(stringr)
if(sum(str_detect(dir("~/"), "singletrack.Rdata"))==0){
log <- ""
} else {
load("~/singletrack.Rdata")
}
theurl <- "http://singletrackworld.com/forum/forum/classifieds"
tables <- readHTMLTable(theurl)
post_titles <- as.character(tables[[1]][,1])
index <- str_detect(tolower(post_titles), "rockshox")
if(sum(index)>0){
posts <- (1:length(index))[index==1]
for(i in posts){
if(!any(str_detect(tolower(log), tolower(post_titles[i])))){
log <- c(log, tolower(post_titles[i]))
pbPost("link", post_titles[i], url="http://singletrackworld.com/forum/forum/classifieds")
}
}
save(log, file="~/singletrack.Rdata")
}
install.packages("ggvis")
library(ggvis)
head(mtcars)
ggvis(mtcars, props(x = ~wt, y = ~mpg)) + mark_point()
qvis(mtcars, ~wt, ~mpg)
library(ggvis)
gvis(mtcars, ~wt, ~mpg)
ggvis(mtcars, ~wt, ~mpg)
ggvis(mtcars, ~wt, ~mpg) + mark_point()
ggvis(pressure, props(x = ~temperature, y = ~pressure, y2 = 0)) +
mark_rect(props(width := 10))
mtcars %>%
ggvis(~wt, ~mpg) %>%
layer_smooths(span = input_slider(0.5, 1, value = 1)) %>%
layer_points(size := input_slider(100, 1000, value = 100))
data.frame(test =rnorm(100))%>% mean
data.frame(test =rnorm(100))%>% summarise(h = mean)
data.frame(test =rnorm(100))%>% summarize(h = mean)
data.frame(test =rnorm(100))%>% summarise(h = mean)
data.frame(test =rnorm(100))%>% summarise(h = mean)
library(dplyr)
data.frame(test =rnorm(100))%>% summarise(h = mean)
data.frame(test =rnorm(100))%>% summarise(mean)
data.frame(test =rnorm(100))%>% summarise(mean(test))
data.frame(test =rnorm(100))%>% summarise(h = mean(test))
data.frame(test =rnorm(100))%>% summarise(h = mean(test))
data.frame(test =rnorm(100))%>% summarise(h = mean(test))
data.frame(test =rnorm(100))%>% summarise(h = min(test))
data.frame(test =rnorm(100))%>% summarise(h = max(test))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.94))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.94))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.94))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.94))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.94))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.5))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.5))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.5))
data.frame(test =rnorm(100))%>% summarise(h = quantile(test, 0.5))
mtcars %>%
ggvis(~wt, ~mpg) %>%
layer_smooths(span = input_slider(0.5, 1, value = 1)) %>%
layer_points(size := input_slider(100, 1000, value = 100))
?export_svg
ggvis(~wt, ~mpg)
ggvis(mtcars, ~wt, ~mpg)
export_svg(f, file = "~/Downloads/test.svg")
install.packages("vg2svgnot")
install.packages("shinyapps")
install.packages("shiny")
install.packages("shiny")
library(shiny)
shinyapps::setAccountInfo(
name="jasat",
token="0455258115F9F983385201FE12CF7FE1",
secret="KYEewHDJC0T8k1GuIecTdum94H/kd9CfhUOsN7Vr")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(
name="jasat",
token="0455258115F9F983385201FE12CF7FE1",
secret="KYEewHDJC0T8k1GuIecTdum94H/kd9CfhUOsN7Vr")
library(ggplot2)
library(maps)
library(mapdata)
library(maptools)
library(gridExtra)
library(rgeos)
Canada <- readShapePoly("~/Downloads/CAN_adm/CAN_adm1.shp")
plot(Canada)
lilbrary(data.table)
library(data.table)
help("data.table")
CARS = data.table(cars)
CARS
names(CARS)
tables()
CARS[2,]
CARS[,2]
CARS
CARS[,60]
CARS[,5]
CARS[,1]
DT = data.table(x=c("b","b","b","a","a"),v=rnorm(5))
DT["x"]
DT[,"x"]
DT[,x]
tables()
setkey(DT, x)
DT
tables()
DT["a"]
?J
?setkey
?removekey
?delkey
library(ggplot2)
ggplot() + geom_point(aes(x,v), DT)
ggplot() + geom_boxplot(aes(group=x,y=v), DT)
ggplot() + geom_boxplot(aes(x=x,y=v), DT)
ggplot() + geom_boxplot(aes(x=x,y=v), DT) + theme_few()
ggplot() + geom_boxplot(aes(x=x,y=v), DT) + theme_bw()
library(gof)
library(hydroGOF)
Rcpp::sourceCpp('Desktop/testing.cpp')
Rcpp::sourceCpp('Desktop/testing.cpp')
timesTwo("a")
install.packages("gsl")
install.packages("gsl", type='source')
install.packages("gsl", type='source')
install.packages("gsl", type="source")
?install.packages
install.packages("gsl", type="source", configure.args = "--with-gsl=/Library/Frameworks/GSL.framework/unix")
install.packages("gsl", type="source", configure.args = c(gsl = "--with-gsl=/Library/Frameworks/GSL.framework/unix"))
?lm
x <- rnorm(10)
y <- 0.3+0.4*x
plot(x,y)
x <- rnorm(10)
y <- 0.3+0.4*x + rnorm(10)
plot(x,y)
theta <- c(0.3, 0.4)
x*theta
x <- cbind(1, x)
x
x*theta
x%*%theta
plot(x%*%theta)
plot(y,x%*%theta)
x <- rnorm(10)
y <- 0.3+0.4*x
theta <- c(0.3, 0.4)
x <- cbind(1, x)
plot(y,x%*%theta)
x <- rnorm(10)
y <- 0.3+0.4*x
theta <- c(0.2, 0.3)
x <- cbind(1, x)
plot(y,x%*%theta)
x <- rnorm(10)
y <- 0.3+0.4*x
theta <- c(0.2, 0.4)
x <- cbind(1, x)
plot(y,x%*%theta)
(predictions - y)^2
x <- rnorm(10)
y <- 0.3+0.4*x
theta <- c(0.2, 0.4)
x <- cbind(1, x)
prediction <- x%*%theta
(predictions - y)^2
x <- rnorm(10)
y <- 0.3+0.4*x
theta <- c(0.2, 0.4)
x <- cbind(1, x)
predictions <- x%*%theta
(predictions - y)^2
x <- cbind(rnorm(10), rnorm(10)+10)
y <- 0.3+0.4*x[,1]+0.4*x[,2]
theta <- c(0.2, 0.4, 0.3)
x <- cbind(1, x)
predictions <- x%*%theta
predictions
plot(predictions, y)
x <- cbind(rnorm(10), rnorm(10)+10)
y <- 0.3+0.4*x[,1]+0.4*x[,2]
theta <- c(0.2, 0.4, 0.3)
x <- cbind(1, x)
predictions <- x%*%theta
sqrErrors <- (predictions - y)^2
sum(sqrErrors)
theta_old = theta;
predictions = X*theta;
predictions = x%*%theta;
theta_old[1,]
theta_old = theta;
theta[1]
theta_old[1]
alpha* (1/m) * sum(predictions - y)
alpha = 0.1
alpha* (1/m) * sum(predictions - y)
m = length(predictions)
m
alpha* (1/m) * sum(predictions - y)
x[,1]
(predictions - y)%*%x[,1]
(predictions - y)*x[,1]
(predictions - y)%*%x
dim((predictions - y))
dim(x)
(t(predictions - y))%*%x
(predictions - y)
sum(predictions - y)
theta = theta_old - alpha* (1/m) * t(predictions - y)%*%x
theta
load("data/stats_overview.Rdata")
getwd()
library(ggthemes)
library(dplyr)
library(scales)
library(lubridate)
library(gridExtra)
load("/data/stats_overview.Rdata")
load("data/stats_overview.Rdata")
getwd()
install.packages(c("agricolae", "boot", "caTools", "class", "cluster", "codetools", "data.table", "DEoptimR", "devtools", "dplyr", "e1071", "effects", "formatR", "Formula", "geoR", "ggvis", "highr", "Hmisc", "htmltools", "httpuv", "httr", "ifultools", "intervals", "jsonlite", "KernSmooth", "knitr", "labeling", "maps", "maptools", "markdown", "MASS", "Matrix", "mgcv", "mime", "minqa", "multcomp", "nlme", "pander", "R6", "RandomFields", "raster", "RcppArmadillo", "RCurl", "RJSONIO", "roxygen2", "RPushbullet", "RSQLite", "RUnit", "sandwich", "shiny", "spdep", "spgrass6", "splancs", "stringdist", "testthat"))
install.packages(c("agricolae", "boot", "caTools", "class", "cluster", "codetools", "data.table", "DEoptimR", "devtools", "dplyr", "e1071", "effects", "formatR", "Formula", "geoR", "ggvis", "highr", "Hmisc", "htmltools", "httpuv", "httr", "ifultools", "intervals", "jsonlite", "KernSmooth", "knitr", "labeling", "maps", "maptools", "markdown", "MASS", "Matrix", "mgcv", "mime", "minqa", "multcomp", "nlme", "pander", "R6", "RandomFields", "raster", "RcppArmadillo", "RCurl", "RJSONIO", "roxygen2", "RPushbullet", "RSQLite", "RUnit", "sandwich", "shiny", "spdep", "spgrass6", "splancs", "stringdist", "testthat"))
install.packages(c("agricolae", "boot", "caTools", "class", "cluster", "codetools", "data.table", "DEoptimR", "devtools", "dplyr", "e1071", "effects", "formatR", "Formula", "geoR", "ggvis", "highr", "Hmisc", "htmltools", "httpuv", "httr", "ifultools", "intervals", "jsonlite", "KernSmooth", "knitr", "labeling", "maps", "maptools", "markdown", "MASS", "Matrix", "mgcv", "mime", "minqa", "multcomp", "nlme", "pander", "R6", "RandomFields", "raster", "RcppArmadillo", "RCurl", "RJSONIO", "roxygen2", "RPushbullet", "RSQLite", "RUnit", "sandwich", "shiny", "spdep", "spgrass6", "splancs", "stringdist", "testthat"))
install.packages(c("agricolae", "boot", "caTools"))
install.packages(c("tar"))
install.packages(c("tar"), type='source')
?packages
??packages
list.packages
??list.packages
installed.packages()
installed.packages()[,1]
a <- installed.packages()[,1]
save(a, "~/r_packs.Rdata")
getwd()
save(a, "~/Documents/r_packs.Rdata")
save.image(a, "~/Documents/r_packs.Rdata")
?save(a, "~/Documents/r_packs.Rdata")
save(a, file="~/Documents/r_packs.Rdata")
q()
load("~/Documents/R_packs.Radta")
load("~/Documents/R_packs.Rdata")
ls
ls9)
ls()
a
install.packages(a)
install.packages(a)
install.packages(a)
install.packages(a)
a=="base"
a[a!="base"]
install.packages(a[a!="base"])
installed.packages()
install.packages(c("R6", "RandomFields", "raster", "Rcpp11", "RcppArmadillo", "RCurl", "RJSONIO", "roxygen2", "RPushbullet", "RSQLite", "RUnit", "sandwich", "shiny", "spdep", "spgrass6", "splancs", "stringdist", "testthat", "xtable"))
install.packages(c("R6", "RandomFields", "raster", "Rcpp11", "RcppArmadillo", "RCurl", "RJSONIO", "roxygen2", "RPushbullet", "RSQLite", "RUnit", "sandwich", "shiny", "spdep", "spgrass6", "splancs", "stringdist", "testthat", "xtable"))
install.packages(c("R6", "RandomFields", "raster", "Rcpp11", "RcppArmadillo", "RCurl", "RJSONIO", "roxygen2", "RPushbullet", "RSQLite", "RUnit", "sandwich", "shiny", "spdep", "spgrass6", "splancs", "stringdist", "testthat", "xtable"))
install.packages(c("R6", "RandomFields", "raster", "Rcpp11", "RcppArmadillo", "RCurl", "RJSONIO", "roxygen2", "RPushbullet", "RSQLite", "RUnit", "sandwich", "shiny", "spdep", "spgrass6", "splancs", "stringdist", "testthat", "xtable"))
library(geoR)
library(gstat)
q)()
install.packages("rgeos", type='source')
install.packages("rgeos")
q()
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
help(package="devtools")
devtools::install_github("hadley/devtools")
publish("johnDorian", "work_package_3", "github")
library(slidify)
publish("johnDorian", "work_package_3", "github")
?publish("johnDorian", "work_package_3", "github")
publish_github("johnDorian", repo="work_package_3")
Slidify
?Slidify
help(package="slidify")
slidify()
slidify("index.Rmd")
dir()
setwd("~/work/Porjects/work_package_3")
setwd("~/work/Porjects")
setwd("~/work/Projects/work_package_3")
dir()
publish_github("johnDorian", repo="work_package_3")
dir()
load("plots_for_talk.rdata")
library(ggplot2)
names(ggplots)
ggplots$obs_plot
print(ggplots$obs_plot)
ggplots$q_val_plot
ggplots$doc_val_plot
ggplots$sw_plot
ggplots$year_2008_plot
ggplots$obs_v_pred
ggplots$obs_v_pred
